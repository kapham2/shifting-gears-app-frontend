{"version":3,"sources":["components/SigninForm.js","components/GameCanvas.js","components/Game.js","components/Stats.js","components/CoverContainer.js","App.js","serviceWorker.js","index.js"],"names":["SigninForm","onSubmitForm","e","username","password","preventDefault","target","querySelector","value","toLowerCase","_this","props","active","authenticate","signUp","console","log","fetch","method","headers","Content-type","body","JSON","stringify","user","then","response","ok","json","setUserAndRedirect","catch","updateUserId","id","localStorage","setItem","token","updateNav","includes","test","error","updateSignedIn","updateActive","document","getElementsByClassName","classList","remove","add","clear","this","input","react_default","a","createElement","type","className","placeholder","name","required","autoFocus","onSubmit","React","Component","GameCanvas","drawGame","context","img","clearRect","canvas","width","height","translate","drawElevation","drawCyclist","drawTick","drawVelocityScale","yElevationFirst","elevation","elevationScale","yElevationLast","indexLast","beginPath","moveTo","lineTo","forEach","index","xDistance","distanceToIndexRatio","distanceScale","imgWidth","yElevation","fillStyle","fill","strokeStyle","lineWidth","stroke","font","textAlign","fillText","i","velocityMax","length","idxTeethCog","velocity","xStart","distance","Math","max","apply","Object","toConsumableArray","updateFrame","frame","xTranslate","yTranslate","elevationAndSlope","angle","atan","slope","rotate","xSrc","x","y","drawImage","spriteWidth","_this2","contextScale","distanceTotal","refs","gameCanvas","style","concat","getContext","scale","Image","src","process","timer","setInterval","clearInterval","ref","Game","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","startTimer","setState","start","Date","now","grade","milliseconds","time","state","getDistance","getVelocity","getElevationAndSlope","stopTimer","createGame","getElementById","disabled","avgVelocity","Authorization","getItem","game","user_id","userId","avg_velocity","resetTimer","onClickStart","getVelocityMax","teethChainring","teethCog","radiusTire","getAcceleration","forcePedal","lengthCrankArm","massBikeAndRider","sin","Cr","cos","Cd","ARider","rho","pow","acceleration","onClickShiftUp","onClickShiftDown","distanceIntervals","previousIndex","floor","nextIndex","ceil","previousDistance","nextDistance","previousElevation","lastIndex","nextLastIndex","lastDistance","nextLastDistance","lastElevation","cadence","gearRatio","round","elevations","random","GameCanvas_GameCanvas","onClick","Stats","_isMounted","stats","Content-Type","rank","scope","map","stat","key","CoverContainer","signedIn","onClickNav","newActive","oldActive","getAttribute","onClickLogout","nav","main_content","components_Game","components_Stats","components_SigninForm","alt","role","App","components_CoverContainer","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.771629f9.chunk.js","sourcesContent":["import React from 'react'\nimport '../signin.css'\n\nclass SigninForm extends React.Component {\n\n  componentDidMount() {\n    localStorage.clear()\n    this.props.updateActive(\"Sign in\")\n    document.getElementsByClassName(\"nav-link active\")[0].classList.remove(\"active\")\n    document.getElementsByClassName(\"nav-link\")[0].classList.add(\"active\")\n  }\n\n  onSubmitForm = (e) => {\n    e.preventDefault()\n\n    let username\n    let password\n\n    if (e.target.querySelector('input')) {\n      username = e.target.querySelector('input[name=\"username\"]').value.toLowerCase()\n      password = e.target.querySelector('input[name=\"password\"]').value\n    }\n\n    switch(this.props.active) {\n      case \"Sign in\":\n        this.authenticate(username, password)\n        break\n      case \"Sign up\":\n        this.signUp(username, password)\n        break\n      case \"Use Incognito Mode\":\n        this.authenticate(\"incognito\", \"p@$$w0rd\")\n        break\n      default:\n        console.log(\"SigninForm: onSubmitForm => ERROR!\")\n        break\n    }\n  }\n\n  authenticate = (username, password) => {\n    console.log(\"authenticated!\")\n    fetch('https://shifting-gears-app-backend.herokuapp.com/api/v1/signin', {\n      method: 'POST',\n      headers: { 'Content-type' : 'application/json' },\n      body: JSON.stringify({\n        user: {\n          username: username,\n          password: password\n        }\n      })\n    })\n    .then(response => {\n      if (response.ok) {\n        return response.json()\n      }\n      else {\n        throw response\n      }\n    })\n    .then(response => this.setUserAndRedirect(response))\n    .catch(response => response.json().then(response => console.log(response)))\n  }\n      \n  setUserAndRedirect = (response) => {\n    this.props.updateUserId(response.user.id)\n    localStorage.setItem('token', response.token)\n    this.updateNav()\n  }\n\n  signUp = (username, password) => {\n    console.log(\"signed up!\")\n    if (username.includes(\" \") || /[~`!@#$%^&*()\\-+={[}\\]|\\\\:;\"'<,>.?/]/g.test(username)) {\n      console.log({error: \"Username can't include special characters\"})\n    }\n    else\n    {\n      fetch('https://shifting-gears-app-backend.herokuapp.com/api/v1/users', {\n        method: 'POST',\n        headers: { 'Content-type' : 'application/json' },\n        body: JSON.stringify({\n          user: {\n            username: username,\n            password: password\n          }\n        })\n      })\n      .then(response => {\n        if (response.ok) {\n          return response.json()\n        }\n        else {\n          throw response\n        }\n      })\n      .then(response => this.setUserAndRedirect(response))\n      .catch(response => response.json().then(response => console.log(response)))\n    }\n  }\n\n  updateNav = () => {\n    this.props.updateSignedIn()\n    this.props.updateActive(\"Game\")\n    document.getElementsByClassName(\"nav-link active\")[0].classList.remove(\"active\")\n    document.getElementsByClassName(\"nav-link\")[0].classList.add(\"active\")\n  }\n\n  render() {\n    // console.log(\"SigninForm: this.props => \", this.props)\n    const input = this.props.active === \"Use Incognito Mode\" \n      ? \"\" \n      : (\n        <div>\n          <input type=\"text\" id=\"inputUsername\" className=\"form-control\" placeholder=\"Username\" name=\"username\"required autoFocus />\n          <input type=\"password\" id=\"inputPassword\" className=\"form-control\" placeholder=\"Password\" name=\"password\" required />\n        </div>\n        )\n\n    return(\n      <form className=\"form-signin\" onSubmit={this.onSubmitForm}>\n        { input }\n        <button className=\"btn shadow-sm btn-block\" type=\"submit\">{this.props.active}</button>\n      </form>\n    )\n  }\n}\n\nexport default SigninForm","import React, { Component } from 'react';\n\nexport default class GameCanvas extends Component {\n  componentDidMount() {\n    this.width = 300\n    this.height = 80\n    this.imgWidth = 50\n    this.contextScale = 10\n    this.elevationScale = 10\n    this.frame = 0\n\n    this.indexLast = this.props.elevation.length - 1\n    this.distanceTotal = this.indexLast * this.props.distanceToIndexRatio\n    this.distanceScale = (this.width - this.imgWidth) / this.distanceTotal\n\n    const canvas = this.refs.gameCanvas\n    canvas.width = this.width * this.contextScale\n    canvas.height = (this.height + 100) * this.contextScale\n    canvas.style.width = `${this.width}px`\n    canvas.style.height = `${this.height + 100}px`\n    \n    const context = canvas.getContext(\"2d\")\n    context.scale(this.contextScale, this.contextScale)\n    \n    const img = new Image()\n    img.src = `${process.env.PUBLIC_URL + \"/cyclist-sprite-sheet.png\"}`\n    this.spriteWidth = 400\n\n    this.timer = setInterval(() => this.drawGame(context, img), 50)\n  }\n\n  drawGame = (context, img) => {\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height)\n    context.translate(0, this.height)\n\n    this.drawElevation(context)\n    \n    this.drawCyclist(context, img)\n    \n    this.drawTick(context)\n\n    this.drawVelocityScale(context)\n    \n    context.translate(0, -this.height)\n  }\n  \n  drawElevation = (context) => {\n    const yElevationFirst = -this.props.elevation[0] * this.elevationScale\n    const yElevationLast = -this.props.elevation[this.indexLast] * this.elevationScale\n    \n    context.beginPath();\n    context.moveTo(0, 0);\n    context.lineTo(0, yElevationFirst);\n\n    this.props.elevation.forEach((elevation, index) => {\n      const xDistance = index * this.props.distanceToIndexRatio * this.distanceScale + this.imgWidth / 2\n      const yElevation = -elevation * this.elevationScale\n      return context.lineTo(xDistance, yElevation);\n    })\n\n    context.lineTo(this.width, yElevationLast);\n    context.lineTo(this.width, 0);\n    context.fillStyle = \"#566E7A\"\n    context.fill();\n  }\n\n  drawVelocityScale = (context) => {\n    context.beginPath()\n    context.moveTo(0, 60)\n    context.lineTo(this.width, 60)\n    context.strokeStyle = \"#192D4BF2\";\n    context.lineWidth = 3;\n    context.stroke()\n\n    context.font = \"bold 18px Helvetica Neue\";\n    context.textAlign = \"center\"\n    context.fillStyle = \"#FFFFFF\"\n    context.fillText(\"Max Velocity in Current Gear\", this.width / 2, 40)\n\n    for (let i = 0; i < this.props.velocityMax.length; i++) {\n      context.beginPath()\n      context.moveTo(this.props.velocityMax[i] * 25, 70)\n      context.lineTo(this.props.velocityMax[i] * 25, 50)\n      context.strokeStyle = i === this.props.idxTeethCog ? \"#FFFFFF\" : \"#192D4BF2\";\n      context.lineWidth = 3;\n      context.stroke()\n    }\n\n    context.beginPath()\n    context.moveTo(this.props.velocity * 25, 70)\n    context.lineTo(this.props.velocity * 25, 50)\n    context.strokeStyle = \"#D20155\";\n    context.lineWidth = 3;\n    context.stroke()\n    context.fillStyle = \"#D20155\"\n    context.fillText(\"Current Velocity\", this.width / 2, 90)\n  }\n\n  drawTick = (context) => {\n    context.beginPath()\n    const xStart = this.props.distance * this.distanceScale + this.imgWidth / 2\n    context.moveTo(xStart, 0)\n    context.lineTo(xStart, -Math.max(...this.props.elevation) * this.elevationScale)\n    context.strokeStyle = \"#D20155\";\n    context.lineWidth = 2;\n    context.stroke()\n\n  }\n\n  updateFrame = () =>{\n    //Updating the frame index \n    if (this.frame + 1 > 19) {\n      this.frame = 0\n    }\n    else {\n      this.frame = (this.frame + 1); \n    }\n    \n    //Calculating the x coordinate for spritesheet \n    return this.frame * 400; \n  }\n\n  drawCyclist = (context, img) => {\n    // translate canvas origin to point of rotation\n    const xTranslate = this.props.distance * this.distanceScale + this.imgWidth / 2\n    const yTranslate = -(this.props.elevationAndSlope.elevation * this.elevationScale)\n    context.translate(xTranslate, yTranslate);\n\n    const angle = -Math.atan(this.props.elevationAndSlope.slope * this.elevationScale / this.distanceScale)\n    context.rotate(angle)\n\n    const xSrc = this.props.img === \"/cyclist.png\" ? 0 : this.updateFrame()\n\n    // position top left point of image so that bottom middle of the image is at origin\n    const x = -this.imgWidth / 2\n    const y = -this.imgWidth\n    context.drawImage(img, xSrc, 0, this.spriteWidth, this.spriteWidth, x, y, this.imgWidth, this.imgWidth);\n    \n    context.rotate(-angle)\n    context.translate(-xTranslate, -yTranslate);\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.timer)\n  }\n\n  render() {\n    if (this.props.distance > 100) {\n      clearInterval(this.timer)\n    }\n\n    return (\n      <canvas ref=\"gameCanvas\"/>\n    )\n  }\n}","import React from 'react'\n// import Chart from './Chart'\nimport GameCanvas from './GameCanvas'\n\nclass Game extends React.Component {\n\n  constructor() {\n    super()\n\n    this.cadence = 1 // s (60RPM)\n    this.forcePedal = 125 // N\n    this.lengthCrankArm = 165 //mm\n    this.radiusTire = 700 / 2 //mm\n    this.massBikeAndRider = 160 //kg\n    this.Cr = 0.004 // (coefficient of rolling friction)\n    this.Cd = 1 // (coefficient of drag)\n    this.ARider = 0.4 //m2 (frontal area of rider)\n    this.rho = 1.225 //kg/m3 (air density)\n    this.teethCog = [32, 28, 25, 22, 20, 18, 16, 14, 13, 12, 11, 9.4, 8.6, 8, 7.3]\n\n    this.gearRatio = []\n    for (let i = 0; i < this.teethCog.length; i++) {\n      this.gearRatio = this.gearRatio.concat([Math.round(32 / this.teethCog[i] * 10) / 10])\n    }\n    // console.log(\"Gear Ratio:\", this.gearRatio)\n\n    this.velocityMax = []\n    for (let i = 0; i < this.gearRatio.length; i++) {\n      this.velocityMax = this.velocityMax.concat([Math.round(this.gearRatio[i] * 2 * 3.14 * this.radiusTire / 1000 * 100) / 100])\n    }\n    // console.log(\"Max Velocity:\", this.velocityMax)\n\n    const elevations = [[1, 1], [2, 2], [3, 3]]\n    let elevation = [1, 1, 1]\n    for (let i = 0; i < 3; i++) {\n      elevation = elevation.concat(elevations[Math.round(Math.random() * (2))])\n    }\n    this.elevation = elevation.concat([1, 1])\n\n    this.distanceToIndexRatio = 10\n\n    this.state = {\n      time: 0,\n      start: Date.now(),\n      distance: 0, //m\n      velocity: 0, //m/s\n      teethChainring: 32,\n      idxTeethCog: 0,\n      grade: 0, //deg\n      img: \"/cyclist.png\"\n    }\n  }\n\n  startTimer = () => {\n    // console.log(\"start\")\n    this.setState({\n      start: Date.now(),\n      distance: 0,\n      velocity: 0,\n      idxTeethCog: 0,\n      grade: 0,\n      img: \"/cyclist.gif\"\n    })\n\n    this.milliseconds = 1000 / 4\n    this.timer = setInterval(() => this.setState({ \n      time: Date.now() - this.state.start,\n      distance: this.getDistance(this.milliseconds),\n      velocity: this.getVelocity(),\n      grade: this.getElevationAndSlope().slope * 10\n    }), this.milliseconds)\n  }\n\n  stopTimer = () => {\n    // console.log(\"stop\")\n\n    this.createGame()\n\n    clearInterval(this.timer)\n    \n    document.getElementById(\"shift-up-btn\").disabled = true\n    document.getElementById(\"shift-down-btn\").disabled = true\n  }\n  \n  createGame = () => {    \n    let avgVelocity\n\n    if (this.state.distance === 0 && this.state.time === 0) {\n      avgVelocity = 0\n    }\n    else {\n      avgVelocity = this.state.distance / (this.state.time / 1000)\n    }\n    // console.log(\"avgVelocity\", avgVelocity)\n\n    fetch('https://shifting-gears-app-backend.herokuapp.com/api/v1/games', {\n      method: 'POST',\n      headers: {\n        'Content-type' : 'application/json',\n        'Authorization' : `Bearer ${localStorage.getItem(\"token\")}`\n      },\n      body: JSON.stringify({\n        game: {\n          user_id: this.props.userId,\n          distance: this.state.distance, //m\n          time: this.state.time / 1000, //s\n          avg_velocity: avgVelocity, //m/s\n        }\n      })\n    })\n    .then(response => {\n      if (response.ok) {\n        return response.json()\n      }\n      else {\n        throw response\n      }\n    })\n    // .then(response => console.log(response))\n    .catch(response => response.json().then(response => console.log(response)))\n  }\n\n  resetTimer = () => {\n    // console.log(\"reset\")\n    this.setState({ time: 0 })\n  }\n\n  onClickStart = (e) => {\n    if (this.state.time === 0) {\n      document.getElementById(\"start-btn\").disabled = true\n      // document.getElementById(\"acceleration-p\").classList.remove(\"hide-p\")\n      // document.getElementById(\"velocity-p\").classList.remove(\"hide-p\")\n      this.startTimer()\n    }\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.timer)\n  }\n\n  getVelocityMax = () => {\n    return (this.state.teethChainring / this.teethCog[this.state.idxTeethCog]) * 2 * 3.14 * this.radiusTire / 1000\n  }\n  \n  getAcceleration = () => {\n    const forceForward = this.forcePedal * (this.lengthCrankArm * this.teethCog[this.state.idxTeethCog]) / (this.state.teethChainring * this.radiusTire)\n  \n    const forceResistGravity = -(this.massBikeAndRider * 9.81 * Math.sin(this.state.grade * 3.14 / 180))\n    const forceResistRolling = -(this.Cr * this.massBikeAndRider * 9.81 * Math.cos(this.state.grade * 3.14 / 180))\n    const forceResistDrag = -(0.5 * this.Cd * this.ARider * this.rho * this.state.velocity ** 2)\n    const forceResist = forceResistGravity + forceResistRolling + forceResistDrag\n  \n    const forceNet = forceForward + forceResist\n\n    return forceNet / this.massBikeAndRider\n  }\n\n  getVelocity = () => {\n    const velocityMax = this.getVelocityMax()\n    const acceleration = this.getAcceleration()\n\n    if (this.state.grade >= 0) {\n      if (this.state.velocity + acceleration <= 0 && acceleration < 0) {\n        // console.log(\"end game; velocity < 0 && acceleration < 0\")\n        this.setState({ img: \"/cyclist.png\" })\n        this.stopTimer()\n        return 0\n      }\n      else if (this.state.velocity + acceleration <= 0) {\n        // console.log(\"change to a lower gear\")\n        return 0        \n      }\n      else if (this.state.velocity + acceleration < this.state.velocity) {\n        // console.log(\"change to a lower gear\")\n        return this.state.velocity + acceleration\n      }\n      else if (this.state.velocity + acceleration <= velocityMax) {\n        // console.log(\"OK\")\n        return this.state.velocity + acceleration\n      }\n      else {\n        // console.log(\"change to a higher gear\")\n        return velocityMax\n      }\n    }\n    else {\n      if (this.state.velocity + acceleration >= velocityMax){\n        // console.log(\"change to a higher gear\")\n        return this.state.velocity + acceleration\n      }\n      else {\n        // console.log(\"OK\")\n        return this.state.velocity + acceleration\n      }\n    }\n  }\n\n  getDistance = (milliseconds) => {\n    const nextDistance = this.state.distance + this.state.velocity * milliseconds / 1000\n\n    if (nextDistance >= 100) {\n      // console.log(\"end game; distance > 100m\")\n      this.setState({ img: \"/cyclist.png\"})\n      this.stopTimer()\n    }\n\n    return this.state.distance + this.state.velocity * milliseconds / 1000\n  }\n\n  onClickShiftUp = () => {\n    if (this.state.time > 0) {\n      \n      if (this.state.idxTeethCog + 1 < this.teethCog.length) {\n        // console.log(\"shift up\")\n        this.setState({\n          idxTeethCog: this.state.idxTeethCog + 1\n        })\n      }\n\n    }\n  }\n\n  onClickShiftDown = () => {\n    if (this.state.time > 0) {\n      \n      if (this.state.idxTeethCog - 1 >= 0) {\n        // console.log(\"shift down\")\n        this.setState({\n          idxTeethCog: this.state.idxTeethCog - 1\n        })\n      }\n\n    }\n  }\n\n  getElevationAndSlope = () => {\n    \n    if (this.state.distance !== 0) {\n      const distanceIntervals = this.elevation.length - 1\n      \n      const previousIndex = Math.floor(this.state.distance / distanceIntervals)\n      const nextIndex = Math.ceil(this.state.distance / distanceIntervals)\n      \n      if (this.state.distance < 100) {\n        const previousDistance = previousIndex * this.distanceToIndexRatio\n        const nextDistance = nextIndex * this.distanceToIndexRatio\n        \n        const previousElevation = this.elevation[previousIndex]\n        const nextElevation = this.elevation[nextIndex]\n    \n        const distanceDiff = nextDistance - previousDistance\n        const elevationDiff = nextElevation - previousElevation\n\n        const slope = elevationDiff / distanceDiff\n\n        const elevation = slope * (this.state.distance - previousDistance) + previousElevation\n\n        return { elevation: elevation, slope: slope }\n      }\n      else {\n        const lastIndex = this.elevation.length - 1\n        const nextLastIndex = lastIndex - 1\n\n        const lastDistance = lastIndex * this.distanceToIndexRatio\n        const nextLastDistance = nextLastIndex * this.distanceToIndexRatio\n\n        const lastElevation = this.elevation[lastIndex]\n        const nextLastElevation = this.elevation[nextLastIndex]\n\n        const distDiff = lastDistance - nextLastDistance\n        const elevDiff = lastElevation - nextLastElevation\n\n        const lastSlope = elevDiff / distDiff\n\n        return { elevation: lastElevation, slope: lastSlope }\n      }\n    }\n    else {\n      return { elevation: 1, slope: 0 }\n    }\n    \n  }\n\n  render() {\n    // console.log(\"this.state\", this.state)\n\n    // const imgCyclistStyle = {\n    //   left: -115 + this.state.distance * 2.35,\n    //   top: 40 - this.getElevationAndSlope().elevation * 9.25,\n    //   transform: `rotate(${-Math.atan(this.getElevationAndSlope().slope) * 9.25 / 2.35}rad)`,\n    // }\n\n    return (\n      <div>\n          {/* <img className=\"img-cyclist\" src={process.env.PUBLIC_URL + this.state.img} style={imgCyclistStyle} alt=\"\" /> */}\n          {/* <Chart distance={this.state.distance} elevation={this.elevation} distanceToIndexRatio={this.distanceToIndexRatio} /> */}\n          <GameCanvas elevationAndSlope={this.getElevationAndSlope()} distance={this.state.distance} elevation={this.elevation} distanceToIndexRatio={this.distanceToIndexRatio} img={this.state.img} velocityMax={this.velocityMax} velocity={this.state.velocity} idxTeethCog={this.state.idxTeethCog} />\n          <p>\n            <button className=\"btn shadow-sm btn-sm\" id=\"start-btn\" onClick={this.onClickStart}>Start</button>{\" \"}\n            <button className=\"btn shadow-sm btn-sm shift-btn\" id=\"shift-up-btn\" onClick={this.onClickShiftUp}>Shift Up</button>{\" \"}\n            <button className=\"btn shadow-sm btn-sm shift-btn\" id=\"shift-down-btn\" onClick={this.onClickShiftDown}>Shift Down</button>\n          </p>\n          {/* <p className=\"hide-p\" id=\"acceleration-p\">acc = {Math.round(this.getAcceleration() * 100) / 100} m/s<sup>2</sup></p> */}\n          {/* <p className=\"hide-p\" id=\"velocity-p\">v<sub>i</sub> = {Math.round(this.state.velocity * 100) / 100} m/s (v<sub>max</sub> = {Math.round(this.getVelocityMax() * 100) / 100} m/s)</p> */}\n      </div>\n    )\n  }\n}\n\nexport default Game","import React from 'react'\n\nclass Stats extends React.Component {\n\n  constructor() {\n    super()\n\n    this._isMounted = false\n\n    this.state = { stats: [] }\n  }\n\n  componentDidMount() {\n    this._isMounted = true\n    fetch('https://shifting-gears-app-backend.herokuapp.com/api/v1/games/top-10', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization' : `Bearer ${localStorage.getItem(\"token\")}`\n      }\n    })\n    .then(response => response.json())\n    .then(response => this._isMounted ? this.setState({ stats: response }) : null)\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false\n  }\n\n  render() {\n    let rank = 0\n\n    return (\n      <div>\n        <table className=\"table table-sm table-striped table-dark\">\n          <thead>\n            <tr>\n              <th scope=\"col\">#</th>\n              <th scope=\"col\">Name</th>\n              <th scope=\"col\">Score</th>\n            </tr>\n          </thead>\n          <tbody>\n            {\n              this.state.stats.map((stat) => {\n                rank = rank + 1\n                return (\n                  <tr key={stat.id}>\n                    <th scope=\"row\">{rank}</th>\n                    <td>{stat.user.username}</td>\n                    <td>{Math.round(stat.avg_velocity * 100) / 100}</td>\n                  </tr>\n                )\n              })\n            }\n          </tbody>\n        </table>\n      </div>\n    )\n  }\n}\n\nexport default Stats","import React from 'react'\nimport '../cover.css'\nimport SigninForm from './SigninForm'\nimport Game from './Game'\nimport Stats from './Stats'\n\nclass CoverContainer extends React.Component {\n\n  state = {\n    // active: \"Sign in\",\n    // signedIn: false,\n    active: \"Game\",\n    signedIn: true,\n    userId: 0\n  }\n\n  onClickNav = (e) => {\n    const newActive = e.target\n    const oldActive = document.getElementsByClassName(\"nav-link active\")[0]\n    \n    if (newActive !== oldActive) {\n      oldActive.classList.remove(\"active\")\n      newActive.classList.add(\"active\")\n      this.updateActive(newActive.getAttribute(\"name\"))\n    }\n  }\n\n  updateActive = (newActive) => {\n    this.setState({ active: newActive })\n  }\n\n  updateSignedIn = () => {\n    this.setState({ signedIn: !this.state.signedIn })\n  }\n\n  onClickLogout = (e) => {\n    this.setState({\n      active: \"Sign in\",\n      signedIn: !this.state.signedIn,\n      userId: 0\n    })\n    document.getElementsByClassName(\"nav-link active\")[0].classList.remove(\"active\")\n    document.getElementsByClassName(\"nav-link\")[0].classList.add(\"active\")\n    localStorage.clear()\n  }\n\n  updateUserId = (userId) => {\n    this.setState({ userId: userId })\n  }\n\n  render() {\n    // console.log(\"CoverContainer: this.state => \", this.state)\n    const nav = !this.state.signedIn\n      ? (\n        <nav className=\"nav nav-masthead justify-content-center\">\n          <div className=\"nav-link active\" name=\"Sign in\" onClick={this.onClickNav}>Sign in</div>\n          <div className=\"nav-link\" name=\"Sign up\" onClick={this.onClickNav}>Sign up</div>\n          <div className=\"nav-link\" name=\"Use Incognito Mode\" onClick={this.onClickNav}>Incognito</div>\n        </nav>\n      )\n      : (\n        <nav className=\"nav nav-masthead justify-content-center\">\n          <div className=\"nav-link active\" name=\"Game\" onClick={this.onClickNav}>Game</div>\n          <div className=\"nav-link\" name=\"Stats\" onClick={this.onClickNav}>Stats</div>\n          <div className=\"nav-link\" name=\"Log out\" onClick={this.onClickLogout}>Log out</div>\n        </nav>\n      )\n\n      const main_content = !this.state.signedIn\n      ? <SigninForm active={this.state.active} updateSignedIn={this.updateSignedIn} updateActive={this.updateActive} updateUserId={this.updateUserId} />\n      : this.state.active === \"Game\" ? <Game updateActive={this.updateActive} userId={this.state.userId} /> : <Stats />\n\n    return (\n      <div className=\"cover-container d-flex w-100 h-100 p-2 mx-auto flex-column\">\n        <header className=\"masthead mb-auto\">\n          <div className=\"inner\">\n            <h4 className=\"masthead-brand\">\n              <img className=\"img-icon\" src={process.env.PUBLIC_URL + \"/icon.png\"} alt=\"\" /> Shifting Gears\n            </h4>\n            { nav }\n          </div>\n        </header>\n\n        <div className=\"d-flex justify-content-center\">\n          <main role=\"main\" className=\"inner cover\">\n            { main_content }\n          </main>\n        </div>\n\n        <footer className=\"mastfoot mt-auto\">\n          <div className=\"inner\">\n            {/* <p>Photo by Tim Foster | App by Kim Pham</p> */}\n          </div>\n        </footer>\n      </div>    \n    )\n  }\n}\n\nexport default CoverContainer","import React, { Component } from 'react';\nimport './App.css';\nimport '../node_modules/bootstrap/dist/css/bootstrap.css'\nimport CoverContainer from './components/CoverContainer'\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n          <CoverContainer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}